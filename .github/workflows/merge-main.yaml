name: Package Build and Publish

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - _argocd/**  # <<<< !!! Very Important exclusion, otherwise there is a danger of endless loop build and deploy
      - .github/**
      - docker-compose.yml
      - Makefile
      - README.md

jobs:

  build-push:
    name: Build & Publish Container
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:

      - name: Check out the repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Log in to Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.event.repository.full_name }}/${{ github.event.repository.name }}:${{ github.sha }}
            ghcr.io/${{ github.event.repository.full_name }}/${{ github.event.repository.name }}:latest

  deploy:
    name: Update ArgoCD deployment app
    runs-on: ubuntu-latest
    needs:
      - build-push
    permissions:
      contents: write
    steps:

      - name: Check out the repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Update application values image.tag
        id: update-image-tag
        run: |
          sed -i "/tag: /s/:.*/: ${{ github.sha }}/g" "_argocd/applications/dev/${{ github.event.repository.name }}.yaml"
          cat "_argocd/applications/dev/${{ github.event.repository.name }}.yaml"
          if [[ "$(git status --porcelain)" == "" ]]; then
            echo "has-changes=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          git config --global user.name '${{ github.actor }}'
          git config --global user.email 'github-cicd@cloudbeds.com'
          git add -A
          git commit -m "[automated commit] ${{ github.event.repository.name }} update image tag ${{ github.sha }}"
          echo "has-changes=true" >> $GITHUB_OUTPUT

      - name: Push changes
        if: steps.update-image-tag.outputs.has-changes == 'true'
        uses: ad-m/github-push-action@40bf560936a8022e68a3c00e7d2abefaf01305a6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

      - name: Argocd sync
        env:
          ARGOCD_PROJECT_BOOTSTRAP_APP: ${{ github.event.repository.name }}-bootstrap
          ARGOCD_SERVER: ${{ vars.ARGOCD_DEV_SERVER_EKS_SVC }}
          ARGOCD_AUTH_TOKEN: ${{ secrets.ARGOCD_DEV_API_SYNC_TOKEN }}
          ARGOCD_OPTS: "--grpc-web"
          ARGOCD_SYNC_TIMEOUT: 300
        run: |
          # Download argocd binary
          curl -s "https://${ARGOCD_SERVER}/download/argocd-linux-amd64" -o argocd
          sudo install argocd /usr/local/bin

          # Refresh project bootstrap app to get latest changes
          argocd app get --refresh "${ARGOCD_PROJECT_BOOTSTRAP_APP}" > /dev/null

          # WAIT for previous operation to complete, SYNC app and WAIT till app is in healthy status or fail if timeout exceeds
          argocd app wait "${ARGOCD_PROJECT_BOOTSTRAP_APP}" --operation && \
            argocd app sync "${ARGOCD_PROJECT_BOOTSTRAP_APP}" --resource "argoproj.io:Application:${{ github.event.repository.name }}" && \
            argocd app wait "${{ github.event.repository.name }}" --sync --health --timeout "$ARGOCD_SYNC_TIMEOUT"
